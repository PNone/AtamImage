name: Build and Export Docker Images on Tag

on:
  push:
    tags:
      - 'v*'  # triggers on tag pushes like v1.0.0

jobs:
  build-and-export:
    runs-on: ubuntu-latest

    env:
      OP_SYS_TAG: ${{ github.ref_name }}
      COMMIT_TAG: ${{ github.sha }}

    permissions:
      contents: write  # Required to upload release assets

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up persistent Buildx builder
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          buildkitd-flags: --debug
          driver-opts: |
            image=moby/buildkit:latest
          install: true

      # --- Restore Docker layer cache (global) ---
      - name: Restore Docker layer cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-global-cache
          restore-keys: |
            docker-global-cache

      # --- Build atam image ---
      - name: Build atam image
        run: |
          docker buildx build \
            --builder default \
            --platform linux/amd64 \
            --secret id=student_pass_atam,env=STUDENT_PASS_ATAM \
            --secret id=student_uid_atam,env=STUDENT_UID_ATAM \
            -t atam:$COMMIT_TAG \
            -f atam/Atam.Dockerfile atam \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache,mode=max \
            --load
        env:
          STUDENT_PASS_ATAM: ${{ secrets.STUDENT_PASS_ATAM }}
          STUDENT_UID_ATAM: ${{ secrets.STUDENT_UID_ATAM }}

      # --- Build opsys image ---
      - name: Build opsys image
        run: |
          docker buildx build \
            --builder default \
            --platform linux/amd64 \
            --secret id=student_pass_os,env=STUDENT_PASS_OS \
            --secret id=student_uid_os,env=STUDENT_UID_OS \
            -t opsys:$COMMIT_TAG \
            -f OperatingSystems/OpSys.Dockerfile OperatingSystems \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache,mode=max \
            --load
        env:
          STUDENT_PASS_OS: ${{ secrets.STUDENT_PASS_OS }}
          STUDENT_UID_OS: ${{ secrets.STUDENT_UID_OS }}

      # --- Save image tarballs ---
      - name: Save image tarballs
        run: |
          docker save atam:$COMMIT_TAG -o AtamUbuntu-image-${OP_SYS_TAG}.tar
          docker save opsys:$COMMIT_TAG -o OpSysUbuntu-image-${OP_SYS_TAG}.tar

      # --- Export rootfs tarballs from containers ---
      - name: Export rootfs tarballs
        run: |
          container_id_atam=$(docker run -t -d --name AtamUbuntuContainer atam:$COMMIT_TAG /bin/bash)
          docker export --output=AtamUbuntu-rootfs-${OP_SYS_TAG}.tar $container_id_atam

          container_id_opsys=$(docker run -t -d --name OpSysUbuntuContainer opsys:$COMMIT_TAG /bin/bash)
          docker export --output=OpSysUbuntu-rootfs-${OP_SYS_TAG}.tar $container_id_opsys

      # --- Compress all tarballs ---
      - name: Compress tarballs
        run: |
          gzip -9 AtamUbuntu-image-${OP_SYS_TAG}.tar
          gzip -9 AtamUbuntu-rootfs-${OP_SYS_TAG}.tar
          gzip -9 OpSysUbuntu-image-${OP_SYS_TAG}.tar
          gzip -9 OpSysUbuntu-rootfs-${OP_SYS_TAG}.tar

      # --- Upload tarballs as workflow artifacts ---
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Docker-Tarballs-${{ env.OP_SYS_TAG }}
          path: |
            AtamUbuntu-image-${{ env.OP_SYS_TAG }}.tar.gz
            AtamUbuntu-rootfs-${{ env.OP_SYS_TAG }}.tar.gz
            OpSysUbuntu-image-${{ env.OP_SYS_TAG }}.tar.gz
            OpSysUbuntu-rootfs-${{ env.OP_SYS_TAG }}.tar.gz

      # --- Upload tarballs to GitHub Release ---
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            AtamUbuntu-image-${{ env.OP_SYS_TAG }}.tar.gz
            AtamUbuntu-rootfs-${{ env.OP_SYS_TAG }}.tar.gz
            OpSysUbuntu-image-${{ env.OP_SYS_TAG }}.tar.gz
            OpSysUbuntu-rootfs-${{ env.OP_SYS_TAG }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}

      # --- Save Docker layer cache (global) ---
      - name: Save Docker layer cache
        uses: actions/cache/save@v3
        if: always()
        with:
          path: /tmp/.buildx-cache
          key: docker-global-cache
